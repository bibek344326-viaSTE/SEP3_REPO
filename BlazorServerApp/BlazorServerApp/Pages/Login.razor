@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject BlazorServerApp.Presentation.Managers.LoginManager LoginManager
@inject Blazored.Toast.Services.IToastService ToastService

<div class="container" style="max-width:400px; margin-top:100px;">
    <div class="card shadow-sm">
        <div class="card-body">
            <h4 class="card-title text-center mb-4">Inventory Management System</h4>

            @if (!string.IsNullOrEmpty(LoginManager.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @LoginManager.ErrorMessage
                </div>
            }

            <EditForm Model="@LoginManager.LoginRequest" OnValidSubmit="@HandleValidSubmit">

                <div class="form-group mb-3">
                    <label for="username">Username</label>
                    <InputText @bind-Value="LoginManager.LoginRequest.Username" class="form-control" id="username" required />
                </div>

                <div class="form-group mb-3">
                    <label for="password">Password</label>
                    <InputText @bind-Value="LoginManager.LoginRequest.Password" type="password" class="form-control" id="password" required />
                </div>

                <button type="submit" class="btn btn-primary w-100">Login</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private async Task HandleValidSubmit()
    {
        bool loginSuccess = await LoginManager.AttemptLoginAsync();
        if (loginSuccess)
        {
            ToastService.ShowSuccess("Login successful! Welcome back.", settings =>
            {
                settings.Timeout = 5000; // 5-second timeout
            });

            // Get user role from authentication state
            var role = await LoginManager.GetUserRoleAsync();

            // Navigate based on the role
            if (role == "InventoryManager")
            {
                NavigationManager.NavigateTo("/inventory-dashboard");
            }
            else if (role == "WarehouseWorker")
            {
                NavigationManager.NavigateTo("/warehouse-worker");
            }
            else
            {
                ToastService.ShowError("User role is not recognized.", settings =>
                {
                    settings.Timeout = 7000; // 7-second timeout for error
                });
            }
        }
        else
        {
            ToastService.ShowError(LoginManager.ErrorMessage, settings =>
            {
                settings.Timeout = 7000; // 7-second timeout for error
            });
        }
    }
}
